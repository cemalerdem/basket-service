// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(BasketDbContext))]
    [Migration("20200828203659_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entity.BasketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("Data.Entity.BasketView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BasketViews");
                });

            modelBuilder.Entity("Data.Entity.ItemDetailView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c70dbbe0-da7c-414a-9d3f-3a1971b1d460"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 36, 59, 357, DateTimeKind.Utc).AddTicks(522),
                            IsActive = true,
                            Name = "Iphone",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("90a678ec-812e-442a-a8ad-f0017c69ddde"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 36, 59, 357, DateTimeKind.Utc).AddTicks(5681),
                            IsActive = true,
                            Name = "Pencil",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("499853b9-dcda-4eb3-a5f5-fe013e4736ee"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 36, 59, 357, DateTimeKind.Utc).AddTicks(5791),
                            IsActive = true,
                            Name = "Novel",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("ac8ebb95-d266-4968-8e17-0b5e42b8ca06"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 36, 59, 357, DateTimeKind.Utc).AddTicks(5796),
                            IsActive = true,
                            Name = "Mouse",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("f130e2c9-aa85-4c0d-96ca-1f85e7c96ddb"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 36, 59, 357, DateTimeKind.Utc).AddTicks(5799),
                            IsActive = true,
                            Name = "Keyboard",
                            Quantity = 5,
                            UnitPrice = 1200m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
