// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(BasketDbContext))]
    [Migration("20200828204114_TableNameUpdated")]
    partial class TableNameUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entity.BasketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("Data.Entity.BasketView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BasketViews");
                });

            modelBuilder.Entity("Data.Entity.ItemDetailView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UpdateAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ItemDetailView");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5249f8c-7c0e-48ab-9659-61509b5a87b5"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 41, 13, 784, DateTimeKind.Utc).AddTicks(8443),
                            IsActive = true,
                            Name = "Iphone",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("9417e602-4e64-4ca7-96cf-94fa69cba20c"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 41, 13, 785, DateTimeKind.Utc).AddTicks(2685),
                            IsActive = true,
                            Name = "Pencil",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("a39a0474-3fcb-4891-8ed5-3f603602a742"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 41, 13, 785, DateTimeKind.Utc).AddTicks(2762),
                            IsActive = true,
                            Name = "Novel",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("1d6832e4-87b2-494a-8009-91cf9f8ff14d"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 41, 13, 785, DateTimeKind.Utc).AddTicks(2765),
                            IsActive = true,
                            Name = "Mouse",
                            Quantity = 5,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            Id = new Guid("e6a766b5-6e78-4fb3-884c-c6055cece4ef"),
                            CreatedAtUtc = new DateTime(2020, 8, 28, 20, 41, 13, 785, DateTimeKind.Utc).AddTicks(2767),
                            IsActive = true,
                            Name = "Keyboard",
                            Quantity = 5,
                            UnitPrice = 1200m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
